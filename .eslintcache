[{"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js":"1","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js":"3","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx":"4","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx":"5","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx":"6","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx":"7","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx":"8","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx":"9","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js":"10","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx":"11","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx":"12","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx":"13","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx":"14","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\postRequests.js":"15","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\url.js":"16","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\GoalAccordian.jsx":"17","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProjectAccordian.jsx":"18","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\getRequests.js":"19","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\KpiAccordian.jsx":"20","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\AddFirstKpi.jsx":"21","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\EvalMainview.jsx":"22","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\NoKpiView.jsx":"23","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\EvalKpiAccordian.jsx":"24","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\EvalFormView.jsx":"25"},{"size":372,"mtime":1609239047523,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":13046,"mtime":1611918417439,"results":"29","hashOfConfig":"27"},{"size":3111,"mtime":1609228896248,"results":"30","hashOfConfig":"27"},{"size":2204,"mtime":1609840678138,"results":"31","hashOfConfig":"27"},{"size":4589,"mtime":1611749280383,"results":"32","hashOfConfig":"27"},{"size":3800,"mtime":1611899635855,"results":"33","hashOfConfig":"27"},{"size":1114,"mtime":1610607512121,"results":"34","hashOfConfig":"27"},{"size":6465,"mtime":1611238308948,"results":"35","hashOfConfig":"27"},{"size":25953,"mtime":1609417398884,"results":"36","hashOfConfig":"27"},{"size":2384,"mtime":1611137275250,"results":"37","hashOfConfig":"27"},{"size":784,"mtime":1611665127122,"results":"38","hashOfConfig":"27"},{"size":1207,"mtime":1609999837397,"results":"39","hashOfConfig":"27"},{"size":2425,"mtime":1611210139090,"results":"40","hashOfConfig":"27"},{"size":1426,"mtime":1611916143287,"results":"41","hashOfConfig":"27"},{"size":1132,"mtime":1611918400159,"results":"42","hashOfConfig":"27"},{"size":8519,"mtime":1611238299147,"results":"43","hashOfConfig":"27"},{"size":8178,"mtime":1611215306944,"results":"44","hashOfConfig":"27"},{"size":197,"mtime":1610975565809,"results":"45","hashOfConfig":"27"},{"size":5004,"mtime":1611664236846,"results":"46","hashOfConfig":"27"},{"size":2872,"mtime":1611126022625,"results":"47","hashOfConfig":"27"},{"size":1446,"mtime":1611899611695,"results":"48","hashOfConfig":"27"},{"size":565,"mtime":1611745653208,"results":"49","hashOfConfig":"27"},{"size":3502,"mtime":1611815440091,"results":"50","hashOfConfig":"27"},{"size":676,"mtime":1611755886509,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"1m8vr8y",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"55"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"55"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"55"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js",["120"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n",["121","122"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx",[],["149","150"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx",["151","152","153","154"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\nimport FirstProgramForm from '../Forms/FirstProgram.jsx'\r\nimport ProgramAccordian from '../Accordians/ProgramAccordian.jsx'\r\nimport GoalAccordian from '../Accordians/ProgramAccordian.jsx'\r\n\r\n\r\n\r\n\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            showAddProgramForm: false,\r\n            activeListProgramId: '',\r\n            activeListProjectId: ''\r\n        }\r\n        this.addNewProgram = this.showAddNewProgramForm.bind(this)\r\n        this.hideAddProgramForm = this.hideAddProgramForm.bind(this)\r\n        this.getFormDisplayClass = this.getFormDisplayClass.bind(this)\r\n        this.getLinkDisplayClass = this.getLinkDisplayClass.bind(this)\r\n        this.handleChangeActiveProjectListItem = this.handleChangeActiveProjectListItem.bind(this)\r\n        this.handleChangeActiveProgramListItem = this.handleChangeActiveProgramListItem.bind(this)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    showAddNewProgramForm() {\r\n\r\n        this.setState({ showAddProgramForm: true })\r\n\r\n    }\r\n    hideAddProgramForm() {\r\n        this.setState({ showAddProgramForm: false })\r\n    }\r\n\r\n    getFormDisplayClass() {\r\n        return ((this.state.showAddProgramForm) ? '' : 'display-none')\r\n    }\r\n\r\n    getLinkDisplayClass() {\r\n        return ((this.state.showAddProgramForm) ? 'display-none' : '')\r\n    }\r\n\r\n    handleChangeActiveProjectListItem(ListProjectId) {\r\n        this.setState({ activeListProjectId: ListProjectId })\r\n    }\r\n\r\n    handleChangeActiveProgramListItem(ListProgramId) {\r\n\r\n\r\n        this.setState({ activeListProgramId: ListProgramId })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n\r\n                <div className=\"sidebar-content-area hide-scrollbar\">\r\n                    <Accordion defaultActiveKey=\"0\" >\r\n                        <Card >\r\n\r\n                            <div>\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.15)', fontWeight: 'bold' }}>\r\n                                    <i className=\"fab fa-windows\" style={{ color: 'black' }}></i>  {'\\u00A0'} Programs\r\n                                     </Accordion.Toggle>\r\n                            </div>\r\n\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={{ padding: '0%', paddingTop: '0%' }}>\r\n\r\n                                    {\r\n                                        (this.props.programs.length > 0) ? this.props.programs.map(program => {\r\n\r\n                                            return <ProgramAccordian key={program._id} addObjective={this.props.addObjective} program={program} handleChangeActiveProgramListItem={this.handleChangeActiveProgramListItem} activeListProgramId={this.state.activeListProgramId} handleChangeActiveProjectListItem={this.handleChangeActiveProjectListItem} activeListProjectId={this.state.activeListProjectId} changeProject={this.props.changeProject} addProject={this.props.addProject}\r\n                                                activeObjectiveId={this.props.activeObjectiveId} addGoal={this.props.addGoal} changeObjective={this.props.changeObjective} />\r\n                                        }) : <FirstProgramForm addProgram={this.props.addProgram} hideAddProgramForm={this.hideAddProgramForm} />\r\n                                    }\r\n                                    {\r\n                                        (this.props.programs.length > 0) ? <div className='add-new-program-link '>\r\n                                            <a id='addNewProgramLink' className={this.getLinkDisplayClass()} style={{ fontWeight: 'normal' }} onClick={() => this.showAddNewProgramForm()}><i className=\"fa fa-plus\" aria-hidden=\"true\" ></i> New Program</a>\r\n                                            <div className={this.getFormDisplayClass()}> <FirstProgramForm id='addProgramForm' addProgram={this.props.addProgram} hideAddProgramForm={this.hideAddProgramForm} /></div>\r\n                                        </div> : ''\r\n\r\n                                    }\r\n\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </div>\r\n\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx",["155"],"import React, { Component } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport KpiAccordian from '../components/Accordians/KpiAccordian'\r\nimport AddFirstKpiView from './AddFirstKpi'\r\nimport './style.css'\r\n\r\n\r\nclass MainView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false,\r\n            kpiInputModal: '',\r\n            showModal: false\r\n        }\r\n\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        this.handleAddNewKpi = this.handleAddNewKpi.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleCross = this.handleCross.bind(this)\r\n        this.handleAddNewKpiClick = this.handleAddNewKpiClick.bind(this)\r\n\r\n    }\r\n\r\n    handleAddNewKpi(event) {\r\n        event.stopPropagation()\r\n        // data contains program, project, goal and objective\r\n        var data = this.props.data;\r\n        data.kpi = this.state.kpiInputModal;\r\n        this.props.addKpi(data)\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleClose(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleCross() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleAddNewKpiClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n    }\r\n\r\n    render() {\r\n        var objective = this.props.data.objective\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.handleCross}>\r\n                    <Modal.Header >\r\n                        <Modal.Title>Add KPI</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add KPI Title\"\r\n                            onChange={(e) => { e.stopPropagation(); this.setState({ kpiInputModal: e.target.value }) }}\r\n                            onClick={(e) => { e.stopPropagation() }}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => this.handleClose(e)}>\r\n                            Close\r\n                </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewKpi(e)} >\r\n                            Add\r\n                </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {\r\n\r\n                    (objective.kpis.length == 0) ? <AddFirstKpiView data={this.props.data} addKpi={this.props.addKpi} /> :\r\n\r\n                        <div>\r\n                            <div className='kpi-header'>Key Performance Indicators (KPIS)</div>\r\n                            <div className='add-kpi-div' ><button type=\"button\" className=\"btn btn-primary border-3 add-kpi-button\" onClick={(e) => this.handleAddNewKpiClick(e)} style={{ borderRadius: '10px' }} > <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i> New Kpi</button> </div>\r\n                            {\r\n                                objective.kpis.map(kpi => {\r\n                                    return (<KpiAccordian key={kpi._id} data={this.props.data} kpi={kpi} saveKpiForm={this.props.saveKpiForm} />)\r\n                                })\r\n\r\n                            }\r\n                        </div>\r\n\r\n                }\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainView;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx",["156","157","158"],"\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function FirstProgram(props) {\r\n\r\n  const [programName, setProgramName] = useState({ programName: \"\" })\r\n\r\n  // To avoid Page reloading on form submit \r\n  const preventDefault = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const addProgram = (programName) => {\r\n    props.hideAddProgramForm()\r\n    props.addProgram({ name: programName.programName })\r\n\r\n  }\r\n\r\n  // No essential need\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return (\r\n    <form style={{ textAlign: 'center', padding: '5%' }} onSubmit={preventDefault}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"round-corners\"\r\n        placeholder=\"Add Your Program\"\r\n        onChange={(e) => { setProgramName({ ...programName, programName: e.target.value }) }}\r\n\r\n      />\r\n\r\n      <Button variant=\"primary\" className=\"add-button\" onClick={() => addProgram(programName)}>Add</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default firstProgram;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx",["159","160","161"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\nimport GoalAccordian from '../Accordians/GoalAccordian'\r\n\r\n\r\n\r\nclass ProgramAccordian extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false,\r\n            program: this.props.program,\r\n            showModal: false,\r\n            goalInputModal: '',\r\n\r\n        }\r\n\r\n        this.handleProjectClick = this.handleProjectClick.bind(this);\r\n        this.handleAddNewGoal = this.handleAddNewGoal.bind(this);\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        this.getDefaultActiveKey = this.getDefaultActiveKey.bind(this);\r\n        this.handleCross = this.handleCross.bind(this)\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n\r\n\r\n    }\r\n\r\n    handleProjectClick(event, proj) {\r\n        event.stopPropagation()\r\n\r\n        this.props.handleChangeActiveProjectListItem(event.target.id)\r\n\r\n        console.log(event.target.id)\r\n        this.props.changeProject(this.state.program, proj)\r\n    }\r\n\r\n    handleAddNewGoalClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleAddNewGoal(event) {\r\n        event.stopPropagation()\r\n        let program = this.state.program\r\n        let goal = {}\r\n        goal.name = this.state.goalInputModal\r\n        this.props.addGoal(program, goal)\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleClose(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleCross() {\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    ListItemClass(listItemId) {\r\n\r\n        return ((listItemId === this.props.activeListProjectId) ? 'blue-text-color' : '')\r\n\r\n    }\r\n\r\n    getDefaultActiveKey(programId) {\r\n\r\n        return ((programId === this.props.activeListProgramId) ? \"0\" : \"1\")\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} onHide={this.handleCross}>\r\n                    <Modal.Header >\r\n                        <Modal.Title>Add Goal</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add Goal Title\"\r\n                            onChange={(e) => { e.stopPropagation(); this.setState({ goalInputModal: e.target.value }) }}\r\n                            onClick={(e) => { e.stopPropagation() }}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => this.handleClose(e)}>\r\n                            Close\r\n                       </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewGoal(e)} >\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {// Accordian\r\n                }\r\n                <Accordion id=\"goalAccord\" key=\"goalAccord\" defaultActiveKey=\"1\" style={{}} onClick={(event) => this.handleAccordianClick(event)} >\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{\r\n                            backgroundColor: 'rgba(0, 0, 0, 0.15)',\r\n                            padding: '3% 2%'\r\n                        }}  >\r\n                            {\r\n                                // <i className=\"fa fa-list\" aria-hidden=\"true\" style={{ color: 'black', fontWeight: 'bold' }}></i>\r\n\r\n                            }\r\n\r\n\r\n                            {\r\n                                (this.state.isActive) ?\r\n                                    <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-down\" style={{ margin: '2%' }}></i></div> :\r\n                                    <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-right\" style={{ margin: '2%' }}></i></div>\r\n                            }\r\n                            {this.props.program.name}\r\n\r\n\r\n                            {\r\n                                (this.props.program.goals.length > 0) ? <div className=\"add-new-goal-div\">\r\n                                    <a onClick={(event) => this.handleAddNewGoalClick(event)} style={{ display: 'inline' }}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i></a>\r\n                                </div> : ''\r\n\r\n                            }\r\n\r\n\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body style={{ padding: '0%', paddingTop: '0%' }}>\r\n\r\n                                {\r\n                                    this.props.program.goals.map(goal => {\r\n                                        return (<GoalAccordian key={goal._id} goal={goal} program={this.props.program} activeObjectiveId={this.props.activeObjectiveId} addObjective={this.props.addObjective} activeListProjectId={this.props.activeListProjectId} activeListProgramId={this.props.activeListProgramId} addProject={this.props.addProject} changeProject={this.props.changeProject} handleChangeActiveProjectListItem={this.props.handleChangeActiveProjectListItem}\r\n                                            changeObjective={this.props.changeObjective} />)\r\n                                    })\r\n                                }\r\n\r\n                                {\r\n                                    (this.props.program.goals.length == 0) ? <div className=\"add-new-goal-div-text\" >\r\n                                        <a onClick={(event) => this.handleAddNewGoalClick(event)}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i> Add Goal</a>\r\n                                    </div> : ''\r\n\r\n                                }\r\n\r\n\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgramAccordian;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx",["162","163","164"],"import { React, Component } from 'react';\r\nimport { FormEdit } from 'react-formio';\r\nimport Form from './Form.jsx'\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nclass FrmEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {}\r\n        }\r\n        this.saveForm = this.saveForm.bind(this);\r\n        this.isEmpty = this.isEmpty.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    saveForm(form) {\r\n        console.log(\"Form Data is below\")\r\n        // Send a POST request\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: 'https://api.appilizer.com/frontend/form',\r\n        //     data: form\r\n        // })\r\n        //     .then(res => {\r\n        //         console.log('Response Received')\r\n        //         console.log(res.data)\r\n        //         this.setState({\r\n        //             redirect: true,\r\n        //             form: res.data.Response\r\n        //         })\r\n\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err)\r\n        //     })\r\n\r\n        this.setState({\r\n            redirect: true,\r\n            form: form\r\n        })\r\n\r\n\r\n    }\r\n\r\n    // checks if an object is empty\r\n    isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            this.props.saveForm(this.state.form)\r\n            // this.setState({ form: {} })\r\n            return <Form form={this.state.form} />\r\n\r\n        } else {\r\n\r\n            let form;\r\n            if (!(this.isEmpty(this.props.activeProject.form))) {\r\n                form = this.props.activeProject.form\r\n            } else {\r\n                form = { display: 'form' }\r\n            }\r\n\r\n            return (\r\n                <div style={{ overflow: 'scroll' }} className=\"hide-scrollbar\">\r\n                    <FormEdit\r\n                        form={form}\r\n                        onSaveComponent={(component) => this.saveComponent(component)}\r\n                        saveText=\"Save\"\r\n                        saveForm={(form) => this.saveForm(form)}\r\n                    />\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FrmEdit;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx",["165","166","167","168","169","170","171"],"import { React, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FormBuilder, Form, FormEdit, FormGrid, SubmissionGrid } from 'react-formio';\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nclass Frm extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {},\r\n            submission: {}\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    onSubmit(filledForm) {\r\n\r\n\r\n        this.setState({\r\n\r\n            submission: filledForm\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Form form={this.props.form} onSubmit={(form) => this.onSubmit(form)} submission={this.state.submission} />);\r\n    }\r\n}\r\n\r\nexport default Frm;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx",["172","173","174","175"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function Example() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n           </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n",["176","177"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\postRequests.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\url.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\GoalAccordian.jsx",["178","179","180","181"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport '../style.css'\r\nimport ProjectAccordian from '../Accordians/ProjectAccordian'\r\n\r\n\r\n\r\nclass GoalAccordian extends Component {\r\n    // Need To pass in props  1: program 2:handleChangeActiveProjectListItem 3:handleChangeActiveProjectListItem 4:activeListProgramId 5:addProject\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: true,\r\n            program: this.props.program,\r\n            showModal: false,\r\n            projectInputModal: '',\r\n            activeObjectiveId: ''\r\n\r\n        }\r\n\r\n        this.handleProjectClick = this.handleProjectClick.bind(this);\r\n        this.handleAddNewProject = this.handleAddNewProject.bind(this);\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        this.getDefaultActiveKey = this.getDefaultActiveKey.bind(this);\r\n        this.handleCross = this.handleCross.bind(this)\r\n        this.handleChangeActiveObjective = this.handleChangeActiveObjective.bind(this)\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n\r\n    }\r\n\r\n\r\n\r\n    handleProjectClick(event, proj) {\r\n        event.stopPropagation()\r\n\r\n        this.props.handleChangeActiveProjectListItem(event.target.id)\r\n\r\n        console.log(event.target.id)\r\n        this.props.changeProject(this.state.program, proj)\r\n    }\r\n\r\n    handleAddNewProjectClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleAddNewProject(event) {\r\n        event.stopPropagation()\r\n        let program = this.state.program\r\n        let goal = this.props.goal\r\n        let project = {}\r\n        project.name = this.state.projectInputModal\r\n\r\n        this.props.addProject(program, project, goal)\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    handleChangeActiveObjective(id) {\r\n        console.log('I am in change Active Objective : about to set the state')\r\n        console.log(id)\r\n        this.setState({ activeObjectiveId: id })\r\n\r\n    }\r\n\r\n    handleClose(e) {\r\n        e.stopPropagation()\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleCross() {\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    ListItemClass(listItemId) {\r\n\r\n        return ((listItemId === this.props.activeListProjectId) ? 'blue-text-color' : '')\r\n\r\n    }\r\n\r\n    getDefaultActiveKey(programId) {\r\n\r\n        return ((programId === this.props.activeListProgramId) ? \"0\" : \"1\")\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} onHide={this.handleCross}>\r\n                    <Modal.Header >\r\n                        <Modal.Title>Add Project</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add Project Title\"\r\n                            onChange={(e) => { e.stopPropagation(); this.setState({ projectInputModal: e.target.value }) }}\r\n                            onClick={(e) => { e.stopPropagation() }}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => this.handleClose(e)}>\r\n                            Close\r\n                       </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewProject(e)} >\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {// Accordian\r\n                }\r\n                <Accordion id=\"programAccord\" key=\"ProgramAccord\" defaultActiveKey={this.getDefaultActiveKey(this.props.program.pid)} defaultActiveKey=\"0\" onClick={(event) => this.handleAccordianClick(event)} >\r\n                    <Card >\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{\r\n                            backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n                            padding: '3% 2%'\r\n                        }} >\r\n                            <div className=\"cut-text\" data-tip={this.props.goal.name} >\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n\r\n                                {\r\n                                    (this.state.isActive) ?\r\n                                        <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-down\" style={{ margin: '2%' }}></i></div> :\r\n                                        <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-right\" style={{ margin: '2%' }}></i></div>\r\n\r\n                                }\r\n\r\n\r\n                                {\r\n                                    //<i className=\"fa fa-bullseye\" aria-hidden=\"true\" style={{ color: 'black', fontWeight: 'bold' }}></i>\r\n                                }\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n\r\n                                {this.props.goal.name}\r\n                                <ReactTooltip place=\"right\" type=\"dark\" effect=\"float\" />\r\n\r\n                            </div>\r\n                            {\r\n\r\n                                (this.props.goal.projects.length > 0) ? <div className=\"add-new-project-div\">\r\n                                    <a onClick={(event) => this.handleAddNewProjectClick(event)} style={{ display: 'inline' }}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i></a>\r\n                                </div> : ''\r\n\r\n\r\n                            }\r\n\r\n                            {\r\n                                // (this.state.isActive) ?\r\n                                //     <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-down\" style={{ float: 'right', margin: '2%' }}></i></div> :\r\n                                //     <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-right\" style={{ float: 'right', margin: '2%' }}></i></div>\r\n                            }\r\n\r\n\r\n\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body style={{ padding: '0%', paddingTop: '0%' }}>\r\n\r\n                                {\r\n                                    this.props.goal.projects.map(proj => {\r\n                                        // {\r\n                                        //     // Concatenating id of project with program id\r\n                                        //     var listItemId = proj.id.toString() + this.props.program.id.toString()\r\n\r\n                                        // }\r\n                                        return (<ProjectAccordian key={proj._id} program={this.props.program} project={proj} goal={this.props.goal} addObjective={this.props.addObjective} handleChangeActiveProjectListItem={this.props.handleChangeActiveProjectListItem} changeProject={this.props.changeProject} addProject={this.props.addProject}\r\n                                            activeObjectiveId={this.props.activeObjectiveId} changeActiveObjective={this.handleChangeActiveObjective} activeListProjectId={this.props.activeListProjectId} activeListProgramId={this.props.activeListProgramId} changeObjective={this.props.changeObjective} />)\r\n                                    })\r\n                                }\r\n\r\n                                {\r\n                                    (this.props.goal.projects.length == 0) ?\r\n                                        <div className=\"add-new-project-div-text\">\r\n                                            <a onClick={(event) => this.handleAddNewProjectClick(event)}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i> Add Project</a>\r\n                                        </div> : ''\r\n\r\n                                }\r\n\r\n\r\n\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoalAccordian;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProjectAccordian.jsx",["182","183","184","185","186"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport '../style.css'\r\n\r\n\r\n\r\nclass ProjectAccordian extends Component {\r\n    // Need To pass in props  1: program 2:handleChangeActiveProjectListItem 3:handleChangeActiveProjectListItem 4:activeListProgramId 5:addProject\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: true,\r\n            program: this.props.program,\r\n            showModal: false,\r\n            objectiveInputModal: '',\r\n\r\n        }\r\n\r\n        this.handleObjectiveClick = this.handleObjectiveClick.bind(this);\r\n        this.handleAddNewObjective = this.handleAddNewObjective.bind(this);\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        this.getDefaultActiveKey = this.getDefaultActiveKey.bind(this);\r\n        this.handleCross = this.handleCross.bind(this)\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n\r\n    }\r\n\r\n\r\n    handleObjectiveClick(event, obj) {\r\n        event.stopPropagation()\r\n        var goal = this.props.goal\r\n        var project = this.props.project\r\n        var program = this.props.program\r\n        var data = {\r\n            goal: goal,\r\n            project: project,\r\n            program: program,\r\n            objective: obj\r\n        }\r\n        this.props.changeObjective(data)\r\n        //this.props.changeActiveObjective(obj._id)\r\n    }\r\n\r\n\r\n    handleAddNewObjectiveClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleAddNewObjective(event) {\r\n        event.stopPropagation()\r\n\r\n        let goal = this.props.goal\r\n        let project = this.props.project\r\n        let program = this.props.program\r\n        let objective = this.state.objectiveInputModal\r\n        var data = {\r\n            program: program,\r\n            goal: goal,\r\n            project: project,\r\n            objective: objective\r\n        }\r\n        this.props.addObjective(data)\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    handleClose(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleCross() {\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    ListItemClass(listItemId) {\r\n\r\n        return ((listItemId == this.props.activeObjectiveId) ? 'blue-text-color' : '')\r\n\r\n    }\r\n\r\n    getDefaultActiveKey(programId) {\r\n\r\n        return ((programId === this.props.activeListProgramId) ? \"0\" : \"1\")\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} onHide={this.handleCross}>\r\n                    <Modal.Header >\r\n                        <Modal.Title>Add Objective</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add Objective Title\"\r\n                            onChange={(e) => { e.stopPropagation(); this.setState({ objectiveInputModal: e.target.value }) }}\r\n                            onClick={(e) => { e.stopPropagation() }}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => this.handleClose(e)}>\r\n                            Close\r\n                       </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewObjective(e)} >\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {// Accordian\r\n                }\r\n                <Accordion id=\"projectAccord\" key=\"projectAccord\" defaultActiveKey=\"0\" style={{}} onClick={(event) => this.handleAccordianClick(event)} >\r\n                    <Card >\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{\r\n                            backgroundColor: 'rgba(0, 0, 0, 0.04)',\r\n                            padding: '3% 2%'\r\n                        }} >\r\n                            <div className=\"cut-text\" data-tip={this.props.project.name} >\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n\r\n                                {\r\n                                    // <i className=\"fas fa-project-diagram\" aria-hidden=\"true\" style={{ color: 'black', fontWeight: 'bold' }} ></i>\r\n                                }\r\n\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {\r\n                                    (this.state.isActive) ?\r\n                                        <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-down\" style={{ margin: '2%' }}></i></div> :\r\n                                        <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-right\" style={{ margin: '2%' }}></i></div>\r\n                                }\r\n\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n\r\n\r\n                                {this.props.project.name}\r\n                                <ReactTooltip place=\"right\" type=\"dark\" effect=\"float\" />\r\n\r\n                            </div>\r\n                            {\r\n                                (this.props.project.objectives.length > 0) ?\r\n                                    <div className=\"add-new-objective-div\">\r\n                                        <a onClick={(event) => this.handleAddNewObjectiveClick(event)} style={{ display: 'inline' }}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i></a>\r\n                                    </div> : ''\r\n\r\n                            }\r\n\r\n\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body style={{ padding: '1%' }}>\r\n                                <ul>\r\n                                    {\r\n                                        this.props.project.objectives.map(obj => {\r\n                                            {\r\n                                                // Concatenating id of project with program id // can be incorporated to with programid\r\n                                                // var listItemId = obj._id.toString() + this.props.project._id.toString()\r\n\r\n                                            }\r\n                                            return (<li key={obj._id} id={obj._id} className={this.ListItemClass(obj._id)} onClick={(event) => this.handleObjectiveClick(event, obj)} >\r\n\r\n                                                <i className=\"fa fa-object-group\" aria-hidden=\"true\" style={{ fontWeight: 'bold' }}></i>  {'\\u00A0'} {obj.name}\r\n                                            </li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n\r\n                                </ul>\r\n\r\n                                {\r\n\r\n                                    (this.props.project.objectives.length == 0) ?\r\n                                        <div className=\"add-new-objective-div-text\">\r\n                                            <a onClick={(event) => this.handleAddNewObjectiveClick(event)}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i>Add Objective</a>\r\n                                        </div> : ''\r\n\r\n\r\n                                }\r\n\r\n\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectAccordian;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\getRequests.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\KpiAccordian.jsx",["187"],"import React, { Component } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap'\r\nimport { FormEdit, Form } from 'react-formio';\r\nimport FormView from '../../views/FormView'\r\nimport '../style.css'\r\n\r\nclass KpiAccordian extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false,\r\n            isUpdate: false\r\n\r\n        }\r\n\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        this.saveForm = this.saveForm.bind(this)\r\n        this.handleSetUpdateFlag = this.handleSetUpdateFlag.bind(this)\r\n        this.handleUnsetUpdateFlag = this.handleUnsetUpdateFlag.bind(this)\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n    }\r\n\r\n    saveForm(form) {\r\n\r\n        var { program, project, goal, objective } = this.props.data\r\n        var kpi = this.props.kpi\r\n        // To Much Information\r\n        var newData = {\r\n            programId: program._id,\r\n            projectId: project._id,\r\n            goalId: goal._id,\r\n            objectiveId: objective._id,\r\n            kpiId: kpi._id,\r\n            formDefinition: form,\r\n            program: program,\r\n            project: project,\r\n            goal: goal,\r\n            objective: objective,\r\n            kpi: kpi\r\n        }\r\n        this.props.saveKpiForm(newData)\r\n        this.handleUnsetUpdateFlag()\r\n    }\r\n    SubmitForm(form) {\r\n        console.log('I have submitted Form')\r\n        console.log(form)\r\n    }\r\n\r\n    handleSetUpdateFlag() {\r\n        console.log('I am about to set Update Flag')\r\n        this.setState({ isUpdate: true })\r\n    }\r\n\r\n    handleUnsetUpdateFlag() {\r\n        console.log('I am about to unset Update Flag')\r\n        this.setState({ isUpdate: false })\r\n    }\r\n\r\n\r\n    // checks if an object is empty\r\n    isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    render() {\r\n\r\n        var editFormDefinition = (this.props.kpi.hasOwnProperty('formDefinition')) ? this.props.kpi.formDefinition : { display: 'form' }\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Accordion defaultActiveKey=\"1\" style={{ marginBottom: '1%' }}>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.06)' }} className='kpi-padding' onClick={(event) => this.handleAccordianClick(event)}>\r\n                            <div style={{ textAlign: 'left', fontWeight: '500' }}>\r\n                                <i className=\"fab fa-wpforms\" style={{ color: 'black', fontWeight: '500' }}></i>\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {this.props.kpi.name}\r\n                                {\r\n                                    (this.state.isActive) ?\r\n                                        <div style={{\r\n                                            display: 'inline-block',\r\n                                            float: 'right'\r\n                                        }}> <i className=\"fas fa-angle-down\" style={{ margin: '2%' }}></i></div> :\r\n                                        <div style={{\r\n                                            display: 'inline-block',\r\n                                            float: 'right'\r\n                                        }}> <i className=\"fas fa-angle-right\" style={{ margin: '2%' }}></i></div>\r\n\r\n                                }\r\n                            </div>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <div style={{ overflow: 'scroll', marginTop: '1%' }} className=\"hide-scrollbar\">\r\n                                    {\r\n\r\n\r\n                                        (this.props.kpi.hasOwnProperty('formDefinition') && !this.state.isUpdate) ? <FormView kpi={this.props.kpi} setUpdateFlag={this.handleSetUpdateFlag} /> : <FormEdit\r\n                                            form={editFormDefinition}\r\n                                            onSaveComponent={(component) => this.saveComponent(component)}\r\n                                            saveText=\"Save\"\r\n                                            saveForm={(form) => this.saveForm(form)}\r\n                                        />\r\n\r\n                                    }\r\n\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KpiAccordian;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\AddFirstKpi.jsx",["188"],"import React, { Component } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nclass AddFirstKpi extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showModal: false,\r\n            kpiInputModal: ''\r\n        }\r\n\r\n        this.handleAddNewKpi = this.handleAddNewKpi.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleCross = this.handleCross.bind(this)\r\n        this.handleAddNewKpiClick = this.handleAddNewKpiClick.bind(this)\r\n\r\n    }\r\n\r\n    handleAddNewKpi(event) {\r\n        event.stopPropagation()\r\n        // data contains program, project, goal and objective\r\n        var data = this.props.data;\r\n        data.kpi = this.state.kpiInputModal;\r\n        this.props.addKpi(data)\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleClose(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleCross() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    handleAddNewKpiClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} onHide={this.handleCross}>\r\n                    <Modal.Header >\r\n                        <Modal.Title>Add KPI</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add KPI Title\"\r\n                            onChange={(e) => { e.stopPropagation(); this.setState({ kpiInputModal: e.target.value }) }}\r\n                            onClick={(e) => { e.stopPropagation() }}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => this.handleClose(e)}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewKpi(e)} >\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <div className=\"add-first-kpi-div\">\r\n                    <div className=\"add-first-kpi\" style={{ textAlign: 'center' }}><a style={{ display: 'inline' }}> <i className=\"fas fa-plus add-first-kpi\" aria-hidden=\"true\" onClick={(event) => this.handleAddNewKpiClick(event)}></i></a> </div>\r\n                    <div className=\"add-first-kpi-text\" style={{ textAlign: 'center' }}>Add your first Key Performance Index (KPI)</div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFirstKpi;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\EvalMainview.jsx",["189","190","191"],"import React, { Component } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport EvalKpiAccordian from '../components/Accordians/EvalKpiAccordian'\r\nimport NoKpiView from './NoKpiView'\r\nimport './style.css'\r\n\r\n\r\nclass EvalMainview extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false\r\n        }\r\n\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n    }\r\n\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n    }\r\n\r\n    render() {\r\n        var objective = this.props.data.objective\r\n        return (\r\n            <React.Fragment>\r\n\r\n\r\n                {\r\n\r\n                    (objective.kpis.length == 0) ? <NoKpiView /> :\r\n\r\n                        <div>\r\n                            <div className='kpi-header' style={{ marginBottom: '4%' }}>Key Performance Indicators (KPIS)</div>\r\n                            {\r\n                                objective.kpis.map(kpi => {\r\n                                    return (<EvalKpiAccordian key={kpi._id} data={this.props.data} kpi={kpi} />)\r\n                                })\r\n\r\n                            }\r\n                        </div>\r\n\r\n                }\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EvalMainview;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\NoKpiView.jsx",["192","193"],"import React, { Component } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nclass NoKpiView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"add-first-kpi-div\">\r\n                    <div className=\"add-first-kpi-text\" style={{ textAlign: 'center' }}>No KPI Available</div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoKpiView;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\EvalKpiAccordian.jsx",["194","195"],"import React, { Component } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap'\r\nimport { FormEdit, Form } from 'react-formio';\r\nimport EvalFormView from '../../views/EvalFormView'\r\nimport '../style.css'\r\n\r\nclass KpiAccordian extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false\r\n\r\n        }\r\n\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        //this.saveForm = this.saveForm.bind(this)\r\n        //this.handleSetUpdateFlag = this.handleSetUpdateFlag.bind(this)\r\n        //this.handleUnsetUpdateFlag = this.handleUnsetUpdateFlag.bind(this)\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n    }\r\n\r\n\r\n    // checks if an object is empty\r\n    isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Accordion defaultActiveKey=\"1\" style={{ marginBottom: '1%' }}>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.06)' }} className='kpi-padding' onClick={(event) => this.handleAccordianClick(event)}>\r\n                            <div style={{ textAlign: 'left', fontWeight: '500' }}>\r\n                                <i className=\"fab fa-wpforms\" style={{ color: 'black', fontWeight: '500' }}></i>\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {this.props.kpi.name}\r\n                                {\r\n                                    (this.state.isActive) ?\r\n                                        <div style={{\r\n                                            display: 'inline-block',\r\n                                            float: 'right'\r\n                                        }}> <i className=\"fas fa-angle-down\" style={{ margin: '2%' }}></i></div> :\r\n                                        <div style={{\r\n                                            display: 'inline-block',\r\n                                            float: 'right'\r\n                                        }}> <i className=\"fas fa-angle-right\" style={{ margin: '2%' }}></i></div>\r\n\r\n                                }\r\n                            </div>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <div style={{ overflow: 'scroll', marginTop: '1%' }} className=\"hide-scrollbar\">\r\n                                    {\r\n\r\n\r\n                                        (this.props.kpi.hasOwnProperty('formDefinition') && !(this.isEmpty(this.props.kpi.formData))) ? <EvalFormView kpi={this.props.kpi} /> : <div className='text-center'>'No Submitted Data Available'</div>\r\n\r\n                                    }\r\n\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KpiAccordian;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\EvalFormView.jsx",[],{"ruleId":"196","severity":1,"message":"197","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":23},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"196","severity":1,"message":"204","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":13},{"ruleId":"196","severity":1,"message":"205","line":9,"column":8,"nodeType":"198","messageId":"199","endLine":9,"endColumn":16},{"ruleId":"196","severity":1,"message":"206","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":16},{"ruleId":"196","severity":1,"message":"207","line":11,"column":27,"nodeType":"198","messageId":"199","endLine":11,"endColumn":33},{"ruleId":"196","severity":1,"message":"208","line":11,"column":35,"nodeType":"198","messageId":"199","endLine":11,"endColumn":41},{"ruleId":"196","severity":1,"message":"209","line":11,"column":43,"nodeType":"198","messageId":"199","endLine":11,"endColumn":48},{"ruleId":"196","severity":1,"message":"210","line":13,"column":10,"nodeType":"198","messageId":"199","endLine":13,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":78,"column":15,"nodeType":"213","messageId":"214","endLine":78,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":80,"column":22,"nodeType":"213","messageId":"214","endLine":80,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":126,"column":24,"nodeType":"213","messageId":"214","endLine":126,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":156,"column":24,"nodeType":"213","messageId":"214","endLine":156,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":158,"column":27,"nodeType":"213","messageId":"214","endLine":158,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":194,"column":22,"nodeType":"213","messageId":"214","endLine":194,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":196,"column":25,"nodeType":"213","messageId":"214","endLine":196,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":198,"column":30,"nodeType":"213","messageId":"214","endLine":198,"endColumn":32},{"ruleId":"211","severity":1,"message":"212","line":236,"column":24,"nodeType":"213","messageId":"214","endLine":236,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":238,"column":27,"nodeType":"213","messageId":"214","endLine":238,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":240,"column":32,"nodeType":"213","messageId":"214","endLine":240,"endColumn":34},{"ruleId":"211","severity":1,"message":"212","line":243,"column":35,"nodeType":"213","messageId":"214","endLine":243,"endColumn":37},{"ruleId":"211","severity":1,"message":"212","line":290,"column":24,"nodeType":"213","messageId":"214","endLine":290,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":292,"column":27,"nodeType":"213","messageId":"214","endLine":292,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":294,"column":32,"nodeType":"213","messageId":"214","endLine":294,"endColumn":34},{"ruleId":"211","severity":1,"message":"212","line":296,"column":35,"nodeType":"213","messageId":"214","endLine":296,"endColumn":37},{"ruleId":"211","severity":1,"message":"212","line":298,"column":39,"nodeType":"213","messageId":"214","endLine":298,"endColumn":41},{"ruleId":"211","severity":1,"message":"212","line":380,"column":22,"nodeType":"213","messageId":"214","endLine":380,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":383,"column":24,"nodeType":"213","messageId":"214","endLine":383,"endColumn":26},{"ruleId":"200","replacedBy":"215"},{"ruleId":"202","replacedBy":"216"},{"ruleId":"196","severity":1,"message":"217","line":2,"column":27,"nodeType":"198","messageId":"199","endLine":2,"endColumn":33},{"ruleId":"196","severity":1,"message":"218","line":2,"column":35,"nodeType":"198","messageId":"199","endLine":2,"endColumn":40},{"ruleId":"196","severity":1,"message":"219","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":21},{"ruleId":"220","severity":1,"message":"221","line":88,"column":45,"nodeType":"222","endLine":88,"endColumn":188},{"ruleId":"211","severity":1,"message":"212","line":87,"column":44,"nodeType":"213","messageId":"214","endLine":87,"endColumn":46},{"ruleId":"196","severity":1,"message":"223","line":3,"column":38,"nodeType":"198","messageId":"199","endLine":3,"endColumn":49},{"ruleId":"196","severity":1,"message":"224","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":19},{"ruleId":"196","severity":1,"message":"225","line":4,"column":21,"nodeType":"198","messageId":"199","endLine":4,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":136,"column":37,"nodeType":"222","endLine":136,"endColumn":125},{"ruleId":"211","severity":1,"message":"212","line":154,"column":70,"nodeType":"213","messageId":"214","endLine":154,"endColumn":72},{"ruleId":"220","severity":1,"message":"221","line":155,"column":41,"nodeType":"222","endLine":155,"endColumn":99},{"ruleId":"196","severity":1,"message":"226","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":14},{"ruleId":"196","severity":1,"message":"204","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"227","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":18},{"ruleId":"196","severity":1,"message":"228","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"229","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":21},{"ruleId":"196","severity":1,"message":"205","line":3,"column":29,"nodeType":"198","messageId":"199","endLine":3,"endColumn":37},{"ruleId":"196","severity":1,"message":"230","line":3,"column":39,"nodeType":"198","messageId":"199","endLine":3,"endColumn":47},{"ruleId":"196","severity":1,"message":"231","line":3,"column":49,"nodeType":"198","messageId":"199","endLine":3,"endColumn":63},{"ruleId":"196","severity":1,"message":"226","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":14},{"ruleId":"196","severity":1,"message":"204","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"232","line":2,"column":27,"nodeType":"198","messageId":"199","endLine":2,"endColumn":36},{"ruleId":"196","severity":1,"message":"223","line":2,"column":38,"nodeType":"198","messageId":"199","endLine":2,"endColumn":49},{"ruleId":"196","severity":1,"message":"224","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"196","severity":1,"message":"225","line":3,"column":21,"nodeType":"198","messageId":"199","endLine":3,"endColumn":25},{"ruleId":"200","replacedBy":"233"},{"ruleId":"202","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":130,"column":135,"nodeType":"237","endLine":130,"endColumn":155},{"ruleId":"220","severity":1,"message":"221","line":162,"column":37,"nodeType":"222","endLine":162,"endColumn":128},{"ruleId":"211","severity":1,"message":"212","line":193,"column":70,"nodeType":"213","messageId":"214","endLine":193,"endColumn":72},{"ruleId":"220","severity":1,"message":"221","line":195,"column":45,"nodeType":"222","endLine":195,"endColumn":106},{"ruleId":"211","severity":1,"message":"212","line":91,"column":29,"nodeType":"213","messageId":"214","endLine":91,"endColumn":31},{"ruleId":"220","severity":1,"message":"221","line":167,"column":41,"nodeType":"222","endLine":167,"endColumn":134},{"ruleId":"238","severity":1,"message":"239","line":179,"column":45,"nodeType":"240","messageId":"241","endLine":183,"endColumn":46},{"ruleId":"211","severity":1,"message":"212","line":197,"column":75,"nodeType":"213","messageId":"214","endLine":197,"endColumn":77},{"ruleId":"220","severity":1,"message":"221","line":199,"column":45,"nodeType":"222","endLine":199,"endColumn":108},{"ruleId":"196","severity":1,"message":"242","line":3,"column":20,"nodeType":"198","messageId":"199","endLine":3,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":70,"column":84,"nodeType":"222","endLine":70,"endColumn":117},{"ruleId":"196","severity":1,"message":"217","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"218","line":2,"column":18,"nodeType":"198","messageId":"199","endLine":2,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":34,"column":44,"nodeType":"213","messageId":"214","endLine":34,"endColumn":46},{"ruleId":"196","severity":1,"message":"217","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"218","line":2,"column":18,"nodeType":"198","messageId":"199","endLine":2,"endColumn":23},{"ruleId":"196","severity":1,"message":"205","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":18},{"ruleId":"196","severity":1,"message":"242","line":3,"column":20,"nodeType":"198","messageId":"199","endLine":3,"endColumn":24},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["243"],"no-negated-in-lhs",["244"],"'axios' is defined but never used.","'FormEdit' is defined but never used.","'FormView' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'saveForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["243"],["244"],"'Button' is defined but never used.","'Modal' is defined but never used.","'GoalAccordian' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useCallback' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Formio' is defined but never used.","'Redirect' is defined but never used.","'ReactDOM' is defined but never used.","'FormBuilder' is defined but never used.","'FormGrid' is defined but never used.","'SubmissionGrid' is defined but never used.","'useEffect' is defined but never used.",["243"],["244"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]