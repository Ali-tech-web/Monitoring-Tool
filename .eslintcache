[{"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js":"1","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js":"3","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx":"4","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx":"5","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx":"6","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx":"7","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx":"8","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx":"9","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js":"10","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx":"11","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx":"12","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx":"13","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx":"14","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\postRequests.js":"15","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\url.js":"16","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\GoalAccordian.jsx":"17"},{"size":372,"mtime":1609239047523,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":7634,"mtime":1610615074915,"results":"21","hashOfConfig":"19"},{"size":3111,"mtime":1609228896248,"results":"22","hashOfConfig":"19"},{"size":2204,"mtime":1609840678138,"results":"23","hashOfConfig":"19"},{"size":5006,"mtime":1610617146330,"results":"24","hashOfConfig":"19"},{"size":382,"mtime":1609248243354,"results":"25","hashOfConfig":"19"},{"size":1114,"mtime":1610607512121,"results":"26","hashOfConfig":"19"},{"size":5420,"mtime":1610617536323,"results":"27","hashOfConfig":"19"},{"size":25953,"mtime":1609417398884,"results":"28","hashOfConfig":"19"},{"size":2428,"mtime":1610351433471,"results":"29","hashOfConfig":"19"},{"size":1459,"mtime":1610112401797,"results":"30","hashOfConfig":"19"},{"size":1207,"mtime":1609999837397,"results":"31","hashOfConfig":"19"},{"size":1181,"mtime":1610022176263,"results":"32","hashOfConfig":"19"},{"size":569,"mtime":1610446013859,"results":"33","hashOfConfig":"19"},{"size":738,"mtime":1610430005438,"results":"34","hashOfConfig":"19"},{"size":6558,"mtime":1610610184135,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1m8vr8y",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js",["80"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n",["81","82"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js",["83","84","85","86","87","88","89","90"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx",[],["91","92"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx",["93","94","95","96"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx",["97"],"import React, { Component } from 'react';\r\nimport Sidebar from '../components/Sidebars/Sidebar.jsx'\r\n\r\nclass MainView extends Component {\r\n   \r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div>Hello</div>\r\n            <div>Hello2</div>\r\n\r\n           \r\n           \r\n            </React.Fragment>\r\n          );\r\n    }\r\n}\r\n \r\nexport default MainView;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx",["98","99","100"],"\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function FirstProgram(props) {\r\n\r\n  const [programName, setProgramName] = useState({ programName: \"\" })\r\n\r\n  // To avoid Page reloading on form submit \r\n  const preventDefault = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const addProgram = (programName) => {\r\n    props.hideAddProgramForm()\r\n    props.addProgram({ name: programName.programName })\r\n\r\n  }\r\n\r\n  // No essential need\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return (\r\n    <form style={{ textAlign: 'center', padding: '5%' }} onSubmit={preventDefault}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"round-corners\"\r\n        placeholder=\"Add Your Program\"\r\n        onChange={(e) => { setProgramName({ ...programName, programName: e.target.value }) }}\r\n\r\n      />\r\n\r\n      <Button variant=\"primary\" className=\"add-button\" onClick={() => addProgram(programName)}>Add</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default firstProgram;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx",["101"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx",["102","103","104"],"import { React, Component } from 'react';\r\nimport { FormEdit } from 'react-formio';\r\nimport Form from './Form.jsx'\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nclass FrmEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {}\r\n        }\r\n        this.saveForm = this.saveForm.bind(this);\r\n        this.isEmpty = this.isEmpty.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    saveForm(form) {\r\n        console.log(\"Form Data is below\")\r\n        // Send a POST request\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: 'https://api.appilizer.com/frontend/form',\r\n        //     data: form\r\n        // })\r\n        //     .then(res => {\r\n        //         console.log('Response Received')\r\n        //         console.log(res.data)\r\n        //         this.setState({\r\n        //             redirect: true,\r\n        //             form: res.data.Response\r\n        //         })\r\n\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err)\r\n        //     })\r\n\r\n        this.setState({\r\n            redirect: true,\r\n            form: form\r\n        })\r\n\r\n\r\n    }\r\n\r\n    // checks if an object is empty\r\n    isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            this.props.saveForm(this.state.form)\r\n            // this.setState({ form: {} })\r\n            return <Form form={this.state.form} />\r\n\r\n        } else {\r\n            console.log('I am in form edit')\r\n            let form;\r\n            if (!(this.isEmpty(this.props.activeProject.form))) {\r\n                form = this.props.activeProject.form\r\n            } else {\r\n                form = { display: 'form' }\r\n            }\r\n\r\n            return (\r\n                <div style={{ overflow: 'scroll' }} className=\"hide-scrollbar\">\r\n                    <FormEdit\r\n                        form={form}\r\n                        onSaveComponent={(component) => this.saveComponent(component)}\r\n                        saveText=\"Save\"\r\n                        saveForm={(form) => this.saveForm(form)}\r\n                    />\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FrmEdit;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx",["105","106","107","108","109","110","111"],"import { React, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FormBuilder, Form, FormEdit, FormGrid, SubmissionGrid } from 'react-formio';\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nclass Frm extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {},\r\n            submission: {}\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    onSubmit(filledForm) {\r\n        console.log('I am in On submit Event')\r\n        console.log(filledForm)\r\n        // Send a POST request\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: 'https://api.appilizer.com/api/formSubmission',\r\n        //     data: filledForm\r\n        // })\r\n        //     .then(res => {\r\n        //         console.log('Response Received')\r\n        //         console.log(res.data.Response)\r\n        //         this.setState({\r\n        //             redirect: true,\r\n        //             submission: res.data.Response\r\n        //         })\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err)\r\n        //     })\r\n\r\n        this.setState({\r\n\r\n            submission: filledForm\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Form form={this.props.form} onSubmit={(form) => this.onSubmit(form)} submission={this.state.submission} />);\r\n    }\r\n}\r\n\r\nexport default Frm;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx",["112","113","114","115"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function Example() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n           </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n",["116","117"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\postRequests.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\url.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\GoalAccordian.jsx",["118","119"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport '../style.css'\r\n\r\n\r\n\r\nclass GoalAccordian extends Component {\r\n    // Need To pass in props  1: program 2:handleChangeActiveProjectListItem 3:handleChangeActiveProjectListItem 4:activeListProgramId 5:addProject\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false,\r\n            program: this.props.program,\r\n            showModal: false,\r\n            projectInputModal: '',\r\n\r\n        }\r\n\r\n        this.handleProjectClick = this.handleProjectClick.bind(this);\r\n        this.handleAddNewProject = this.handleAddNewProject.bind(this);\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        this.getDefaultActiveKey = this.getDefaultActiveKey.bind(this);\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        event.stopPropagation()\r\n\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        this.setState({ isActive: activeStatus })\r\n\r\n\r\n    }\r\n\r\n    handleProjectClick(event, proj) {\r\n        event.stopPropagation()\r\n\r\n        this.props.handleChangeActiveProjectListItem(event.target.id)\r\n\r\n        console.log(event.target.id)\r\n        this.props.changeProject(this.state.program, proj)\r\n    }\r\n\r\n    handleAddNewProjectClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleAddNewProject(event) {\r\n        let program = this.state.program\r\n        let goal = this.props.goal\r\n        let project = {}\r\n        project.name = this.state.projectInputModal\r\n        this.props.addProject(program, project, goal)\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    ListItemClass(listItemId) {\r\n\r\n        return ((listItemId === this.props.activeListProjectId) ? 'blue-text-color' : '')\r\n\r\n    }\r\n\r\n    getDefaultActiveKey(programId) {\r\n\r\n        return ((programId === this.props.activeListProgramId) ? \"0\" : \"1\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} onHide={() => this.handleClose()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Project</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add Project Title\"\r\n                            onChange={(e) => this.setState({ projectInputModal: e.target.value })}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.handleClose()}>\r\n                            Close\r\n                       </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewProject(e)} >\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {// Accordian\r\n                }\r\n                <Accordion id=\"programAccord\" key=\"ProgramAccord\" defaultActiveKey={this.getDefaultActiveKey(this.props.program.pid)} style={{}} onClick={(event) => this.handleAccordianClick(event)} >\r\n                    <Card >\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{\r\n                            backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n                        }} >\r\n                            <div className=\"cut-text\" data-tip={this.props.goal.name} >\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n\r\n                                <i className=\"fa fa-bullseye\" aria-hidden=\"true\" style={{ color: 'black', fontWeight: 'bold' }}></i>\r\n                                {'\\u00A0'}\r\n                                {'\\u00A0'}\r\n\r\n                                {this.props.goal.name}\r\n                                <ReactTooltip place=\"right\" type=\"dark\" effect=\"float\" />\r\n\r\n\r\n                            </div>\r\n\r\n                            {\r\n                                (this.state.isActive) ?\r\n                                    <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-down\" style={{ float: 'right', margin: '2%' }}></i></div> :\r\n                                    <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-right\" style={{ float: 'right', margin: '2%' }}></i></div>\r\n                            }\r\n\r\n\r\n\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body style={{ padding: '1%' }}>\r\n                                <ul>\r\n                                    {\r\n                                        this.props.program.projects.map(proj => {\r\n                                            {\r\n                                                // Concatenating id of project with program id\r\n                                                var listItemId = proj.id.toString() + this.props.program.pid.toString()\r\n\r\n                                            }\r\n                                            return (<li key={proj.id} id={listItemId} className={this.ListItemClass(listItemId)} onClick={(event) => this.handleProjectClick(event, proj)} >\r\n                                                <i className=\"fas fa-project-diagram\"  ></i>  {'\\u00A0'} {proj.name}\r\n                                            </li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                                <div className=\"add-new-project-div\">\r\n                                    <a onClick={(event) => this.handleAddNewProjectClick(event)}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i> Add Project</a>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoalAccordian;",{"ruleId":"120","severity":1,"message":"121","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":23},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"120","severity":1,"message":"128","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":13},{"ruleId":"120","severity":1,"message":"130","line":9,"column":27,"nodeType":"122","messageId":"123","endLine":9,"endColumn":33},{"ruleId":"120","severity":1,"message":"131","line":9,"column":35,"nodeType":"122","messageId":"123","endLine":9,"endColumn":41},{"ruleId":"120","severity":1,"message":"132","line":9,"column":43,"nodeType":"122","messageId":"123","endLine":9,"endColumn":48},{"ruleId":"133","severity":1,"message":"134","line":143,"column":25,"nodeType":"135","messageId":"136","endLine":143,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":146,"column":25,"nodeType":"135","messageId":"136","endLine":146,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":186,"column":20,"nodeType":"135","messageId":"136","endLine":186,"endColumn":22},{"ruleId":"124","replacedBy":"137"},{"ruleId":"126","replacedBy":"138"},{"ruleId":"120","severity":1,"message":"139","line":2,"column":27,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"120","severity":1,"message":"140","line":2,"column":35,"nodeType":"122","messageId":"123","endLine":2,"endColumn":40},{"ruleId":"120","severity":1,"message":"141","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":91,"column":49,"nodeType":"144","endLine":91,"endColumn":192},{"ruleId":"120","severity":1,"message":"145","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":15},{"ruleId":"120","severity":1,"message":"146","line":3,"column":38,"nodeType":"122","messageId":"123","endLine":3,"endColumn":49},{"ruleId":"120","severity":1,"message":"147","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":19},{"ruleId":"120","severity":1,"message":"148","line":4,"column":21,"nodeType":"122","messageId":"123","endLine":4,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":133,"column":37,"nodeType":"144","endLine":133,"endColumn":95},{"ruleId":"120","severity":1,"message":"149","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"129","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"120","severity":1,"message":"150","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":18},{"ruleId":"120","severity":1,"message":"151","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"152","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":21},{"ruleId":"120","severity":1,"message":"153","line":3,"column":29,"nodeType":"122","messageId":"123","endLine":3,"endColumn":37},{"ruleId":"120","severity":1,"message":"154","line":3,"column":39,"nodeType":"122","messageId":"123","endLine":3,"endColumn":47},{"ruleId":"120","severity":1,"message":"155","line":3,"column":49,"nodeType":"122","messageId":"123","endLine":3,"endColumn":63},{"ruleId":"120","severity":1,"message":"149","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"129","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"120","severity":1,"message":"156","line":2,"column":27,"nodeType":"122","messageId":"123","endLine":2,"endColumn":36},{"ruleId":"120","severity":1,"message":"146","line":2,"column":38,"nodeType":"122","messageId":"123","endLine":2,"endColumn":49},{"ruleId":"120","severity":1,"message":"147","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":19},{"ruleId":"120","severity":1,"message":"148","line":3,"column":21,"nodeType":"122","messageId":"123","endLine":3,"endColumn":25},{"ruleId":"124","replacedBy":"157"},{"ruleId":"126","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":143,"column":45,"nodeType":"161","messageId":"162","endLine":147,"endColumn":46},{"ruleId":"142","severity":1,"message":"143","line":156,"column":37,"nodeType":"144","endLine":156,"endColumn":98},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"'MainView' is defined but never used.","'axios' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["163"],["164"],"'Button' is defined but never used.","'Modal' is defined but never used.","'GoalAccordian' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Sidebar' is defined but never used.","'useCallback' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Formio' is defined but never used.","'Redirect' is defined but never used.","'ReactDOM' is defined but never used.","'FormBuilder' is defined but never used.","'FormEdit' is defined but never used.","'FormGrid' is defined but never used.","'SubmissionGrid' is defined but never used.","'useEffect' is defined but never used.",["163"],["164"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]