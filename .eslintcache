[{"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js":"1","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js":"3","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx":"4","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx":"5","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx":"6","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx":"7","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx":"8","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx":"9","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js":"10","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx":"11","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx":"12","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx":"13","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx":"14","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\postRequests.js":"15","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\url.js":"16"},{"size":372,"mtime":1609239047523,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":4839,"mtime":1610341621696,"results":"20","hashOfConfig":"18"},{"size":3111,"mtime":1609228896248,"results":"21","hashOfConfig":"18"},{"size":2204,"mtime":1609840678138,"results":"22","hashOfConfig":"18"},{"size":4948,"mtime":1610349903198,"results":"23","hashOfConfig":"18"},{"size":382,"mtime":1609248243354,"results":"24","hashOfConfig":"18"},{"size":1099,"mtime":1610082374951,"results":"25","hashOfConfig":"18"},{"size":6265,"mtime":1610104379973,"results":"26","hashOfConfig":"18"},{"size":25953,"mtime":1609417398884,"results":"27","hashOfConfig":"18"},{"size":2401,"mtime":1610108265680,"results":"28","hashOfConfig":"18"},{"size":1459,"mtime":1610112401797,"results":"29","hashOfConfig":"18"},{"size":1207,"mtime":1609999837397,"results":"30","hashOfConfig":"18"},{"size":1181,"mtime":1610022176263,"results":"31","hashOfConfig":"18"},{"size":328,"mtime":1610341683130,"results":"32","hashOfConfig":"18"},{"size":352,"mtime":1610110347652,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1m8vr8y",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js",["78"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n",["79","80"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js",["81","82","83","84","85"],"\nimport Navbar from './components/Navbars/SimpleNav.jsx'\nimport Sidebar from './components/Sidebars/Sidebar.jsx'\nimport MainView from './views/Mainview.jsx'\nimport React from 'react';\nimport axios from \"axios\";\nimport FormEdit from './components/Formio/FormEdit/FormEdit.jsx'\nimport FormView from './views/FormView'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './style.css'\nimport { saveForm } from './apiRequests/postRequests'\n\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      programs: [],\n      activeProject: {},\n      activeProgram: {},\n      count: 0,\n      mainContent: ''\n    };\n    this.handleAddProgram = this.handleAddProgram.bind(this)\n    this.handleAddProject = this.handleAddProject.bind(this)\n    this.handleProjectChange = this.handleProjectChange.bind(this)\n    this.handleFormSave = this.handleFormSave.bind(this)\n    this.handleUpdateForm = this.handleUpdateForm.bind(this)\n\n\n  }\n\n  // {pid:1 ,name : 'Microsoft IT Classes',projects: [{id:1, name:\"Machine Learning\"},{id:2, name: \"Web Development\"}], isActive: false},\n  //                {pid:2 ,name : 'Skills for 2020',projects: [{id:1, name:\"CNC Machine Training\"},{id:2, name: \"Stitching\"}], isActive: false}\n\n  handleProjectChange(program, project) {\n\n    let mainContentView;\n    if (!(this.isEmpty(project))) {\n\n      if (this.isEmpty(project.form)) {\n\n        mainContentView = <FormEdit activeProgram={program} activeProject={project} saveForm={this.handleFormSave} />;\n      } else {\n\n        mainContentView = <FormView activeProgram={program} activeProject={project} updateForm={this.handleUpdateForm} />\n      }\n\n    }\n\n    this.setState({ activeProject: project, activeProgram: program, mainContent: mainContentView })\n  }\n\n  handleAddProgram(program) {\n    console.log(program)\n    var programs = []\n    programs = this.state.programs\n    var count = this.state.count\n    program.pid = count\n    count++\n    //cbw\n    this.setState({ count: count })\n    program.projects = []\n    // adding totalProject (total Projects is used for project id's increment)\n    program.totalProjects = 0\n\n    programs.push(program)\n    this.setState({ programs: programs })\n    console.log('Final')\n    console.log(programs)\n  }\n\n  handleFormSave(form) {\n\n    var newActiveProg = {}, newActiveProj = {};\n    let programs = this.state.programs.map(program => {\n      if (program.name === this.state.activeProgram.name) {\n        program.projects.forEach((proj) => {\n          if (proj.name === this.state.activeProject.name) {\n            proj.form = form\n            newActiveProg = program;\n            newActiveProj = proj\n          }\n        }\n        )\n      }\n\n      return program\n    })\n\n    saveForm(newActiveProg).then(res => {\n      // Need To send to the server\n      console.log('I am about to get the response')\n      console.log(res.data)\n      let mainContentView;\n      mainContentView = <FormView activeProgram={newActiveProg} activeProject={newActiveProj} updateForm={this.handleUpdateForm} />\n      this.setState({ programs: programs, activeProject: newActiveProj, activeProgram: newActiveProg, mainContent: mainContentView })\n\n    })\n      .catch(err => {\n        console.log(err)\n      })\n\n\n\n  }\n\n\n  handleUpdateForm(program, project) {\n\n    /// might be the need to update the active state\n    let mainContentView = <FormEdit activeProgram={program} activeProject={project} saveForm={this.handleFormSave} />;\n    this.setState({ mainContent: mainContentView })\n\n    console.log(this.state)\n  }\n\n  handleAddProject(program, project) {\n    console.log(program)\n    let newProject = {}\n    newProject.id = program.totalProjects\n    // need to increment total count\n    // Project will be an object and passed through params \n    newProject.name = project.name\n    newProject.form = {}\n    let programs = this.state.programs.map(prog => {\n      if (prog.name === program.name) {\n        prog.projects.push(newProject)\n        //cbw\n        prog.totalProjects++\n\n      }\n      return prog\n    })\n\n    this.setState({ programs: programs })\n    console.log(this.state.programs)\n    console.log('I have to add New Project')\n  }\n\n  // checks if an object is empty\n  isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key))\n        return false;\n    }\n    return true;\n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div>\n          <Sidebar programs={this.state.programs} changeProject={this.handleProjectChange} addProgram={this.handleAddProgram} addProject={this.handleAddProject} />\n          <div className=\"content\">\n            {\n\n              this.state.mainContent\n              // mainContent\n\n            }\n          </div>\n        </div>\n      </React.Fragment>\n\n    )\n  }\n\n}\n\nexport default App;\n","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx",[],["86","87"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx",["88","89","90"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\nimport FirstProgramForm from '../Forms/FirstProgram.jsx'\r\nimport ProgramAccordian from '../Accordians/ProgramAccordian.jsx'\r\n\r\n\r\n\r\n\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            showAddProgramForm: false,\r\n            activeListProgramId: '',\r\n            activeListProjectId: ''\r\n        }\r\n        this.addNewProgram = this.showAddNewProgramForm.bind(this)\r\n        this.hideAddProgramForm = this.hideAddProgramForm.bind(this)\r\n        this.getFormDisplayClass = this.getFormDisplayClass.bind(this)\r\n        this.getLinkDisplayClass = this.getLinkDisplayClass.bind(this)\r\n        this.handleChangeActiveProjectListItem = this.handleChangeActiveProjectListItem.bind(this)\r\n        this.handleChangeActiveProgramListItem = this.handleChangeActiveProgramListItem.bind(this)\r\n\r\n\r\n    }\r\n\r\n    //   changeProject(proj) {\r\n    //     this.props.changeProject(proj)\r\n    //   }\r\n\r\n    showAddNewProgramForm() {\r\n        console.log('I have to add New Program')\r\n        this.setState({ showAddProgramForm: true })\r\n\r\n    }\r\n    hideAddProgramForm() {\r\n        this.setState({ showAddProgramForm: false })\r\n    }\r\n\r\n    getFormDisplayClass() {\r\n        return ((this.state.showAddProgramForm) ? '' : 'display-none')\r\n    }\r\n\r\n    getLinkDisplayClass() {\r\n        return ((this.state.showAddProgramForm) ? 'display-none' : '')\r\n    }\r\n\r\n    handleChangeActiveProjectListItem(ListProjectId) {\r\n        this.setState({ activeListProjectId: ListProjectId })\r\n    }\r\n\r\n    handleChangeActiveProgramListItem(ListProgramId) {\r\n        console.log('I am in Handle Change Prog')\r\n        console.log(ListProgramId)\r\n        this.setState({ activeListProgramId: ListProgramId })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"sidebar\">\r\n                    <div className='row' style={{ marginTop: '8%' }}>\r\n                        <a className=\"active col-4 text-center\" href=\"#planning\">Planning</a>\r\n                        <a href=\"#education\" className=\"col-4 text-center\">Execution</a>\r\n                        <a href=\"#evaluation\" className=\"col-4 text-center\">Evaluation</a>\r\n                    </div>\r\n                    <div className=\"sidebar-content-area hide-scrollbar\">\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n\r\n                                <div>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <i className=\"fab fa-windows\" style={{ color: 'black' }}></i>  {'\\u00A0'} Programs\r\n                                     </Accordion.Toggle>\r\n                                </div>\r\n\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        {\r\n                                            (this.props.programs.length > 0) ? <div className='add-new-program-link '>\r\n                                                <a id='addNewProgramLink' className={this.getLinkDisplayClass()} style={{ fontWeight: 'normal' }} onClick={() => this.showAddNewProgramForm()}><i className=\"fa fa-plus\" aria-hidden=\"true\" ></i> New Program</a>\r\n                                                <div className={this.getFormDisplayClass()}> <FirstProgramForm id='addProgramForm' addProgram={this.props.addProgram} hideAddProgramForm={this.hideAddProgramForm} /></div>\r\n                                            </div> : ''\r\n\r\n                                        }\r\n                                        {\r\n                                            (this.props.programs.length > 0) ? this.props.programs.map(program => {\r\n\r\n                                                return <ProgramAccordian key={program.pid} program={program} handleChangeActiveProgramListItem={this.handleChangeActiveProgramListItem} activeListProgramId={this.state.activeListProgramId} handleChangeActiveProjectListItem={this.handleChangeActiveProjectListItem} activeListProjectId={this.state.activeListProjectId} changeProject={this.props.changeProject} addProject={this.props.addProject} />\r\n                                            }) : <FirstProgramForm addProgram={this.props.addProgram} hideAddProgramForm={this.hideAddProgramForm} />\r\n                                        }\r\n\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx",["91"],"import React, { Component } from 'react';\r\nimport Sidebar from '../components/Sidebars/Sidebar.jsx'\r\n\r\nclass MainView extends Component {\r\n   \r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div>Hello</div>\r\n            <div>Hello2</div>\r\n\r\n           \r\n           \r\n            </React.Fragment>\r\n          );\r\n    }\r\n}\r\n \r\nexport default MainView;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx",["92","93","94"],"\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function FirstProgram(props) {\r\n\r\n  const [programName, setProgramName] = useState({ programName: \"\" })\r\n\r\n  // To avoid Page reloading on form submit \r\n  const preventDefault = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const addProgram = (programName) => {\r\n    props.hideAddProgramForm()\r\n    props.addProgram({ name: programName.programName })\r\n\r\n  }\r\n\r\n  // No essential need\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return (\r\n    <form style={{ textAlign: 'center' }} onSubmit={preventDefault}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"round-corners\"\r\n        placeholder=\"Add Your Program\"\r\n        onChange={(e) => { setProgramName({ ...programName, programName: e.target.value }) }}\r\n\r\n      />\r\n\r\n      <Button variant=\"primary\" className=\"add-button\" onClick={() => addProgram(programName)}>Add</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default firstProgram;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx",["95","96"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\n\r\nclass ProgramAccordian extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false,\r\n            program: this.props.program,\r\n            showModal: false,\r\n            projectInputModal: '',\r\n\r\n        }\r\n\r\n        this.handleProjectClick = this.handleProjectClick.bind(this);\r\n        this.handleAddNewProject = this.handleAddNewProject.bind(this);\r\n        this.handleAccordianClick = this.handleAccordianClick.bind(this);\r\n        this.getDefaultActiveKey = this.getDefaultActiveKey.bind(this);\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        console.log('Clicked Accordian')\r\n        let activeStatus = (this.state.isActive) ? false : true\r\n        console.log(activeStatus)\r\n        this.setState({ isActive: activeStatus })\r\n        // console.log(this.props.program.pid)\r\n        // this.props.handleChangeActiveProgramListItem(this.props.program.pid)\r\n\r\n    }\r\n\r\n    handleProjectClick(event, proj) {\r\n        event.stopPropagation()\r\n        console.log('I clicked a Project')\r\n        this.props.handleChangeActiveProjectListItem(event.target.id)\r\n        // console.log(event)\r\n        console.log(event.target.id)\r\n        this.props.changeProject(this.state.program, proj)\r\n    }\r\n\r\n    handleAddNewProjectClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleAddNewProject(event) {\r\n        let program = this.state.program\r\n        let project = {}\r\n        project.name = this.state.projectInputModal\r\n        this.props.addProject(program, project)\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    ListItemClass(listItemId) {\r\n        console.log('I am in List Item class')\r\n        console.log(listItemId)\r\n        return ((listItemId === this.props.activeListProjectId) ? 'blue-text-color' : '')\r\n\r\n    }\r\n\r\n    getDefaultActiveKey(programId) {\r\n        console.log('I am in getDefault Active Key')\r\n        return ((programId === this.props.activeListProgramId) ? \"0\" : \"1\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} onHide={() => this.handleClose()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Project</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add Project Title\"\r\n                            onChange={(e) => this.setState({ projectInputModal: e.target.value })}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.handleClose()}>\r\n                            Close\r\n                       </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewProject(e)} >\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {// Accordian\r\n                }\r\n                <Accordion id=\"programAccord\" key=\"ProgramAccord\" defaultActiveKey={this.getDefaultActiveKey(this.props.program.pid)} style={{ backgroundColor: 'blue' }} onClick={(event) => this.handleAccordianClick(event)} >\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" >\r\n                            <i className=\"fa fa-list\" aria-hidden=\"true\" style={{ color: 'black', fontWeight: 'bold' }}></i>\r\n                            {'\\u00A0'}\r\n                            {'\\u00A0'}\r\n                            {this.props.program.name}\r\n                            {\r\n                                (this.state.isActive) ?\r\n                                    <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-down\" style={{ float: 'right', margin: '2%' }}></i></div> :\r\n                                    <div style={{ display: 'inline' }}> <i className=\"fas fa-angle-right\" style={{ float: 'right', margin: '2%' }}></i></div>\r\n                            }\r\n\r\n\r\n\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <ul>\r\n                                    {\r\n                                        this.props.program.projects.map(proj => {\r\n                                            {\r\n                                                // Concatenating id of project with program id\r\n                                                var listItemId = proj.id.toString() + this.props.program.pid.toString()\r\n                                                console.log('List id is given' + listItemId)\r\n                                            }\r\n                                            return (<li key={proj.id} id={listItemId} className={this.ListItemClass(listItemId)} onClick={(event) => this.handleProjectClick(event, proj)} >\r\n                                                <i className=\"fas fa-project-diagram\"  ></i>  {'\\u00A0'} {proj.name}\r\n                                            </li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                                <div className=\"add-new-project-div\">\r\n                                    <a onClick={(event) => this.handleAddNewProjectClick(event)}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i> Add Project</a>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgramAccordian;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx",["97","98","99"],"import { React, Component } from 'react';\r\nimport { FormEdit } from 'react-formio';\r\nimport Form from './Form.jsx'\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nclass FrmEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {}\r\n        }\r\n        this.saveForm = this.saveForm.bind(this);\r\n        this.isEmpty = this.isEmpty.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    saveForm(form) {\r\n        console.log(\"Form Data is below\")\r\n        // Send a POST request\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: 'https://api.appilizer.com/frontend/form',\r\n        //     data: form\r\n        // })\r\n        //     .then(res => {\r\n        //         console.log('Response Received')\r\n        //         console.log(res.data)\r\n        //         this.setState({\r\n        //             redirect: true,\r\n        //             form: res.data.Response\r\n        //         })\r\n\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err)\r\n        //     })\r\n\r\n        this.setState({\r\n            redirect: true,\r\n            form: form\r\n        })\r\n\r\n\r\n    }\r\n\r\n    // checks if an object is empty\r\n    isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            this.props.saveForm(this.state.form)\r\n            // this.setState({ form: {} })\r\n            return <Form form={this.state.form} />\r\n\r\n        } else {\r\n            console.log('I am in form edit')\r\n            let form;\r\n            if (!(this.isEmpty(this.props.activeProject.form))) {\r\n                form = this.props.activeProject.form\r\n            } else {\r\n                form = { display: 'form' }\r\n            }\r\n\r\n            return (\r\n                <div style={{ overflow: 'scroll' }}>\r\n                    <FormEdit\r\n                        form={form}\r\n                        onSaveComponent={(component) => this.saveComponent(component)}\r\n                        saveText=\"Save\"\r\n                        saveForm={(form) => this.saveForm(form)}\r\n                    />\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FrmEdit;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx",["100","101","102","103","104","105","106"],"import { React, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FormBuilder, Form, FormEdit, FormGrid, SubmissionGrid } from 'react-formio';\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nclass Frm extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {},\r\n            submission: {}\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    onSubmit(filledForm) {\r\n        console.log('I am in On submit Event')\r\n        console.log(filledForm)\r\n        // Send a POST request\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: 'https://api.appilizer.com/api/formSubmission',\r\n        //     data: filledForm\r\n        // })\r\n        //     .then(res => {\r\n        //         console.log('Response Received')\r\n        //         console.log(res.data.Response)\r\n        //         this.setState({\r\n        //             redirect: true,\r\n        //             submission: res.data.Response\r\n        //         })\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err)\r\n        //     })\r\n\r\n        this.setState({\r\n\r\n            submission: filledForm\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Form form={this.props.form} onSubmit={(form) => this.onSubmit(form)} submission={this.state.submission} />);\r\n    }\r\n}\r\n\r\nexport default Frm;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx",["107","108","109","110"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function Example() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n           </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n",["111","112"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\postRequests.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\apiRequests\\url.js",[],{"ruleId":"113","severity":1,"message":"114","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":23},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"113","severity":1,"message":"121","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":16},{"ruleId":"113","severity":1,"message":"122","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":13},{"ruleId":"113","severity":1,"message":"123","line":9,"column":27,"nodeType":"115","messageId":"116","endLine":9,"endColumn":33},{"ruleId":"113","severity":1,"message":"124","line":9,"column":35,"nodeType":"115","messageId":"116","endLine":9,"endColumn":41},{"ruleId":"113","severity":1,"message":"125","line":9,"column":43,"nodeType":"115","messageId":"116","endLine":9,"endColumn":48},{"ruleId":"117","replacedBy":"126"},{"ruleId":"119","replacedBy":"127"},{"ruleId":"113","severity":1,"message":"128","line":2,"column":27,"nodeType":"115","messageId":"116","endLine":2,"endColumn":33},{"ruleId":"113","severity":1,"message":"129","line":2,"column":35,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"130","severity":1,"message":"131","line":85,"column":49,"nodeType":"132","endLine":85,"endColumn":192},{"ruleId":"113","severity":1,"message":"133","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":15},{"ruleId":"113","severity":1,"message":"134","line":3,"column":38,"nodeType":"115","messageId":"116","endLine":3,"endColumn":49},{"ruleId":"113","severity":1,"message":"135","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":19},{"ruleId":"113","severity":1,"message":"136","line":4,"column":21,"nodeType":"115","messageId":"116","endLine":4,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":127,"column":45,"nodeType":"139","messageId":"140","endLine":131,"endColumn":46},{"ruleId":"130","severity":1,"message":"131","line":140,"column":37,"nodeType":"132","endLine":140,"endColumn":98},{"ruleId":"113","severity":1,"message":"141","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"122","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"113","severity":1,"message":"142","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":18},{"ruleId":"113","severity":1,"message":"143","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":16},{"ruleId":"113","severity":1,"message":"144","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"113","severity":1,"message":"145","line":3,"column":29,"nodeType":"115","messageId":"116","endLine":3,"endColumn":37},{"ruleId":"113","severity":1,"message":"146","line":3,"column":39,"nodeType":"115","messageId":"116","endLine":3,"endColumn":47},{"ruleId":"113","severity":1,"message":"147","line":3,"column":49,"nodeType":"115","messageId":"116","endLine":3,"endColumn":63},{"ruleId":"113","severity":1,"message":"141","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"122","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"113","severity":1,"message":"148","line":2,"column":27,"nodeType":"115","messageId":"116","endLine":2,"endColumn":36},{"ruleId":"113","severity":1,"message":"134","line":2,"column":38,"nodeType":"115","messageId":"116","endLine":2,"endColumn":49},{"ruleId":"113","severity":1,"message":"135","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"136","line":3,"column":21,"nodeType":"115","messageId":"116","endLine":3,"endColumn":25},{"ruleId":"117","replacedBy":"149"},{"ruleId":"119","replacedBy":"150"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'MainView' is defined but never used.","'axios' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.",["151"],["152"],"'Button' is defined but never used.","'Modal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Sidebar' is defined but never used.","'useCallback' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Formio' is defined but never used.","'Redirect' is defined but never used.","'ReactDOM' is defined but never used.","'FormBuilder' is defined but never used.","'FormEdit' is defined but never used.","'FormGrid' is defined but never used.","'SubmissionGrid' is defined but never used.","'useEffect' is defined but never used.",["151"],["152"],"no-global-assign","no-unsafe-negation"]