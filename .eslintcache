[{"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js":"1","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js":"3","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx":"4","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx":"5","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx":"6","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx":"7","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx":"8","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx":"9","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js":"10","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx":"11","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx":"12","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx":"13","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx":"14"},{"size":372,"mtime":1609239047523,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":6107,"mtime":1610016635839,"results":"18","hashOfConfig":"16"},{"size":3111,"mtime":1609228896248,"results":"19","hashOfConfig":"16"},{"size":2204,"mtime":1609840678138,"results":"20","hashOfConfig":"16"},{"size":4978,"mtime":1609924168251,"results":"21","hashOfConfig":"16"},{"size":382,"mtime":1609248243354,"results":"22","hashOfConfig":"16"},{"size":1069,"mtime":1609913925020,"results":"23","hashOfConfig":"16"},{"size":4096,"mtime":1609929183519,"results":"24","hashOfConfig":"16"},{"size":25953,"mtime":1609417398884,"results":"25","hashOfConfig":"16"},{"size":2073,"mtime":1610015940082,"results":"26","hashOfConfig":"16"},{"size":1956,"mtime":1610009578086,"results":"27","hashOfConfig":"16"},{"size":1207,"mtime":1609999837397,"results":"28","hashOfConfig":"16"},{"size":1129,"mtime":1610013535391,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1m8vr8y",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\index.js",["68"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n",["69","70"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\App.js",["71","72","73","74","75","76","77"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\TopNavbar.jsx",[],["78","79"],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Navbars\\SimpleNav.jsx",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Sidebars\\Sidebar.jsx",["80","81"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\nimport FirstProgramForm from '../Forms/FirstProgram.jsx'\r\nimport ProgramAccordian from '../Accordians/ProgramAccordian.jsx'\r\n\r\n\r\n\r\n\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n\r\n    }\r\n\r\n    //   changeProject(proj) {\r\n    //     this.props.changeProject(proj)\r\n    //   }\r\n\r\n    addNewProgram() {\r\n        console.log('I have to add New Program')\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"sidebar\">\r\n                    <div className='row' style={{ marginTop: '8%' }}>\r\n                        <a className=\"active col-4 text-center\" href=\"#planning\">Planning</a>\r\n                        <a href=\"#education\" className=\"col-4 text-center\">Execution</a>\r\n                        <a href=\"#evaluation\" className=\"col-4 text-center\">Evaluation</a>\r\n                    </div>\r\n                    <div className=\"sidebar-content-area\">\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                    <i className=\"fab fa-windows\" style={{ color: '#AAAAAA' }}></i>  {'\\u00A0'} Programs\r\n              </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        {\r\n                                            (this.props.programs.length > 0) ? <div className='add-new-program-link'>\r\n                                                {\r\n                                                    // <a id='addNewProgramLink' onClick={() => this.addNewProgram()}><i className=\"fa fa-plus\" aria-hidden=\"true\" ></i> New Program</a>\r\n                                                }\r\n\r\n\r\n                                                <FirstProgramForm id='addProgramForm' addProgram={this.props.addProgram} />\r\n                                            </div> : ''\r\n\r\n                                        }\r\n\r\n                                        {\r\n                                            (this.props.programs.length > 0) ? this.props.programs.map(program => {\r\n                                                return <ProgramAccordian key={program.pid} program={program} changeProject={this.props.changeProject} addProject={this.props.addProject} />\r\n                                            }) : <FirstProgramForm addProgram={this.props.addProgram} />\r\n                                        }\r\n\r\n                                        {\r\n                                            // {this.props.programs.map(program => {\r\n                                            //     return <ProgramAccordian key={program.pid} program={program}/>\r\n                                            //  })}\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        { /*            \r\n                    <Accordion id=\"programAccord\" key=\"ProgramAccord\" defaultActiveKey=\"0\">\r\n                        <Card>\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                              {'\\u00A0'} \r\n                                Skills for 2020\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <ul>\r\n                                  <li>\r\n                                  <i class=\"fas fa-project-diagram\" style={{color: '#AAAAAA'}}></i>  {'\\u00A0'} CNC Machine Training\r\n                                  </li>\r\n                                  <li>\r\n                                  <i class=\"fas fa-project-diagram\" style={{color: '#AAAAAA'}}></i>   {'\\u00A0'} Stitching\r\n                                  </li>\r\n                                </ul>\r\n                                <div className=\"add-new-project-div\">\r\n                                    <a> <i class=\"fas fa-plus\" aria-hidden=\"true\"></i> Add New Project</a>\r\n                                </div>\r\n                              \r\n\r\n                            </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                */  }\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\Mainview.jsx",["82"],"import React, { Component } from 'react';\r\nimport Sidebar from '../components/Sidebars/Sidebar.jsx'\r\n\r\nclass MainView extends Component {\r\n   \r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div>Hello</div>\r\n            <div>Hello2</div>\r\n\r\n           \r\n           \r\n            </React.Fragment>\r\n          );\r\n    }\r\n}\r\n \r\nexport default MainView;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Forms\\FirstProgram.jsx",["83","84","85"],"\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function FirstProgram(props) {\r\n\r\n  const [programName, setProgramName] = useState({ programName: \"\" })\r\n\r\n  // To avoid Page reloading on form submit \r\n  const preventDefault = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const addProgram = (programName) => {\r\n\r\n    props.addProgram({ name: programName.programName })\r\n\r\n  }\r\n\r\n  // No essential need\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return (\r\n    <form style={{ textAlign: 'center' }} onSubmit={preventDefault}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"round-corners\"\r\n        placeholder=\"Add Your Program\"\r\n        onChange={(e) => { setProgramName({ ...programName, programName: e.target.value }) }}\r\n\r\n      />\r\n\r\n      <Button variant=\"primary\" className=\"add-button\" onClick={() => addProgram(programName)}>Add</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default firstProgram;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Accordians\\ProgramAccordian.jsx",["86"],"import React, { Component } from 'react';\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\n\r\nclass ProgramAccordian extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isActive: false,\r\n            program: this.props.program,\r\n            showModal: false,\r\n            projectInputModal: ''\r\n        }\r\n\r\n        this.handleProjectClick = this.handleProjectClick.bind(this);\r\n        this.handleAddNewProject = this.handleAddNewProject.bind(this)\r\n\r\n    }\r\n\r\n    handleAccordianClick(event) {\r\n        console.log('Clicked Accordian')\r\n\r\n    }\r\n\r\n    handleProjectClick(event, proj) {\r\n        event.stopPropagation()\r\n        this.props.changeProject(this.state.program, proj)\r\n    }\r\n\r\n    handleAddNewProjectClick(event) {\r\n        event.stopPropagation()\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleAddNewProject(event) {\r\n        console.log('I Clicked Add Button')\r\n        let program = this.state.program\r\n        let project = {}\r\n        project.name = this.state.projectInputModal\r\n        this.props.addProject(program, project)\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} onHide={() => this.handleClose()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Project</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"round-corners\"\r\n                            placeholder=\"Add Project Title\"\r\n                            onChange={(e) => this.setState({ projectInputModal: e.target.value })}\r\n\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.handleClose()}>\r\n                            Close\r\n                       </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => this.handleAddNewProject(e)} >\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Accordion id=\"programAccord\" key=\"ProgramAccord\" onClick={(event) => this.handleAccordianClick(event)} >\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            {'\\u00A0'}\r\n                            {this.props.program.name}\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <ul>\r\n                                    {\r\n                                        this.props.program.projects.map(proj => {\r\n                                            return (<li key={proj.id} onClick={(event) => this.handleProjectClick(event, proj)}>\r\n                                                <i className=\"fas fa-project-diagram\" style={{ color: '#AAAAAA' }} ></i>  {'\\u00A0'} {proj.name}\r\n                                            </li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                                <div className=\"add-new-project-div\">\r\n                                    <a onClick={(event) => this.handleAddNewProjectClick(event)}> <i className=\"fas fa-plus\" aria-hidden=\"true\" ></i> Add Project</a>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgramAccordian;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\variables.js",[],"C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\FormEdit.jsx",["87","88"],"import { React, Component } from 'react';\r\nimport { FormEdit } from 'react-formio';\r\nimport Form from './Form.jsx'\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nclass FrmEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {}\r\n        }\r\n        this.saveForm = this.saveForm.bind(this);\r\n        this.isEmpty = this.isEmpty.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    saveForm(form) {\r\n        console.log(\"Form Data is below\")\r\n        // Send a POST request\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://api.appilizer.com/api/form',\r\n            data: form\r\n        })\r\n            .then(res => {\r\n                console.log('Response Received')\r\n                console.log(res.data)\r\n                this.setState({\r\n                    redirect: true,\r\n                    form: res.data.Response\r\n                })\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        //console.log(form)\r\n\r\n    }\r\n\r\n    // checks if an object is empty\r\n    isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            this.props.saveForm(this.state.form)\r\n            // this.setState({ form: {} })\r\n            return <Form form={this.state.form} />\r\n\r\n        } else {\r\n            console.log('I am in form edit')\r\n\r\n            return (\r\n                <div style={{ overflow: 'scroll' }}>\r\n                    <FormEdit\r\n                        form={{ display: 'form' }}\r\n                        onSaveComponent={(component) => this.saveComponent(component)}\r\n                        saveText=\"Save\"\r\n                        saveForm={(form) => this.saveForm(form)}\r\n                    />\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FrmEdit;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Formio\\FormEdit\\Form.jsx",["89","90","91","92","93","94"],"import { React, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FormBuilder, Form, FormEdit, FormGrid, SubmissionGrid } from 'react-formio';\r\nimport Formio from 'formiojs';\r\nimport axios from \"axios\";\r\nclass Frm extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect: false,\r\n            form: {},\r\n            submission: {}\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    onSubmit(filledForm) {\r\n        console.log('I am in On submit Event')\r\n        console.log(filledForm)\r\n        // Send a POST request\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://api.appilizer.com/api/formSubmission',\r\n            data: filledForm\r\n        })\r\n            .then(res => {\r\n                console.log('Response Received')\r\n                console.log(res.data.Response)\r\n                this.setState({\r\n                    redirect: true,\r\n                    submission: res.data.Response\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            console.log('I am about to redirect TO GRID')\r\n            // console.log(\"Form : \"+JSON.stringify(this.props.form))\r\n            // console.log(\"Submission : \"+JSON.stringify(this.state.submission))\r\n            // var forms = [this.props.form, this.props.form ]\r\n            // console.log(forms)\r\n            return (<Form form={this.props.form} submission={this.state.submission} options={{ readOnly: true, inputsOnly: true }} />);\r\n\r\n            // return (<SubmissionGrid form={this.props.form} submissions={[this.state.submission,this.state.submission]}/>)\r\n        }\r\n        console.log('I am in Form')\r\n\r\n        return (<Form form={this.props.form} onSubmit={(form) => this.onSubmit(form)} />);\r\n    }\r\n}\r\n\r\nexport default Frm;","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\components\\Modals\\AddNewProjectModal.jsx",["95","96","97","98"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style.css'\r\n\r\n\r\nexport default function Example() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n           </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","C:\\Users\\ladmin\\Desktop\\Monitor Proj\\my-app\\src\\views\\FormView.jsx",[],{"ruleId":"99","severity":1,"message":"100","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":23},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"99","severity":1,"message":"107","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"99","severity":1,"message":"108","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":13},{"ruleId":"99","severity":1,"message":"109","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":12},{"ruleId":"99","severity":1,"message":"110","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":13},{"ruleId":"99","severity":1,"message":"111","line":11,"column":27,"nodeType":"101","messageId":"102","endLine":11,"endColumn":33},{"ruleId":"99","severity":1,"message":"112","line":11,"column":35,"nodeType":"101","messageId":"102","endLine":11,"endColumn":41},{"ruleId":"99","severity":1,"message":"113","line":11,"column":43,"nodeType":"101","messageId":"102","endLine":11,"endColumn":48},{"ruleId":"103","replacedBy":"114"},{"ruleId":"105","replacedBy":"115"},{"ruleId":"99","severity":1,"message":"116","line":2,"column":27,"nodeType":"101","messageId":"102","endLine":2,"endColumn":33},{"ruleId":"99","severity":1,"message":"110","line":2,"column":35,"nodeType":"101","messageId":"102","endLine":2,"endColumn":40},{"ruleId":"99","severity":1,"message":"117","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"118","line":3,"column":38,"nodeType":"101","messageId":"102","endLine":3,"endColumn":49},{"ruleId":"99","severity":1,"message":"119","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"120","line":4,"column":21,"nodeType":"101","messageId":"102","endLine":4,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":99,"column":37,"nodeType":"123","endLine":99,"endColumn":98},{"ruleId":"99","severity":1,"message":"124","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"125","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":18},{"ruleId":"99","severity":1,"message":"126","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"127","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":21},{"ruleId":"99","severity":1,"message":"128","line":3,"column":29,"nodeType":"101","messageId":"102","endLine":3,"endColumn":37},{"ruleId":"99","severity":1,"message":"129","line":3,"column":39,"nodeType":"101","messageId":"102","endLine":3,"endColumn":47},{"ruleId":"99","severity":1,"message":"130","line":3,"column":49,"nodeType":"101","messageId":"102","endLine":3,"endColumn":63},{"ruleId":"99","severity":1,"message":"124","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"131","line":2,"column":27,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"99","severity":1,"message":"118","line":2,"column":38,"nodeType":"101","messageId":"102","endLine":2,"endColumn":49},{"ruleId":"99","severity":1,"message":"119","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"120","line":3,"column":21,"nodeType":"101","messageId":"102","endLine":3,"endColumn":25},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'MainView' is defined but never used.","'axios' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.",["132"],["133"],"'Button' is defined but never used.","'Sidebar' is defined but never used.","'useCallback' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Formio' is defined but never used.","'Redirect' is defined but never used.","'ReactDOM' is defined but never used.","'FormBuilder' is defined but never used.","'FormEdit' is defined but never used.","'FormGrid' is defined but never used.","'SubmissionGrid' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]